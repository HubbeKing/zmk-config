/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEF 0
#define NUM 1
#define SYM 2
#define ACC 3
#define NAV 4
#define FUN 5
#define SYS 6


&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

&sk {
    release-after-ms = <2000>;
    //quick-release;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        // G A S C      C S A G
        //   A              A
    };
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <100>;
            key-positions = <0 1>;      // Q + W
            bindings = <&kp ESC>;
        };
        combo_tab {
            timeout-ms = <100>;
            key-positions = <10 11>;    // A + S
            bindings = <&kp TAB>;
        };
        combo_sys {
            timeout-ms = <100>;
            key-positions = <30 31>;     // NAV+SPC
            bindings = <&mo SYS>;
        };
        combo_acc {
            timeout-ms = <100>;
            key-positions = <32 33>;    // ENT+NUM
            bindings = <&mo ACC>;
        };
    };
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            // ------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |          |  Y  |  U  |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |          |  H  |  J  |  K  |  L  |  '  |
            // |  Z  |  X  |  C  |  V  |  B  |          |  N  |  M  |  ,  |  .  |  /  |
            //                   | NAV |SPACE|          |ENTER| NUM |
            bindings = <
                &kp Q       &kp W      &kp E      &kp R      &kp T         &kp Y     &kp U      &kp I      &kp O        &kp P
                &hm LGUI A  &hm LALT S &hm LSFT D &hm LCTL F &kp G         &kp H     &hm RCTL J &hm RSFT K &hm LALT L   &hm RGUI QUOT
                &mt LSHFT Z &hm RALT X &kp C      &kp V      &kp B         &kp N     &kp M      &kp COMMA  &hm RALT DOT &mt RSHFT SLASH
                                                  &mo NAV    &kp SPACE     &kp ENTER &mo NUM
            >;
        };
        numbers_layer {
            // ------------------------------------------------------------------------
            // |     |     |     |     |     |          |  7  |  8  |  9  |  +  |  -  |
            // |     |     |     |     |     |          |  4  |  5  |  6  |  *  |  /  |
            // |     |     |     |     |     |          |  1  |  2  |  3  |  0  |  =  |
            //                   | FUN | SYM |          |ENTER|     |
            bindings = <
                &none &none &none &none   &none       &kp N7 &kp N8 &kp K9 &kp PLUS &kp MINUS
                &none &none &none &none   &none       &kp N4 &kp N5 &kp N6 &kp STAR &kp FSLH
                &none &none &none &none   &none       &kp N1 &kp N2 &kp N3 &kp N0   &kp EQUAL
                                  &mo FUN &mo SYM     &kp ENTER &none
            >;
        };
        symbols_layer {
            // ------------------------------------------------------------------------
            // |  !  |  @  |  #  |  $  |  %  |          |  ^  |  &  |  *  |  (  |  )  |
            // |  ?  |  `  |     |     |     |          |  -  |  =  |  ~  |  [  |  ]  |
            // |     |     |     |     |     |          |  ;  |  /  |  \  |  {  |  }  |
            //                   |     |SPACE|          |ENTER|     |
            bindings = <
                &kp EXCL  &kp AT    &kp HASH &kp DOLLAR &kp PERCENT     &kp CARET &kp AMPS  &kp STAR  &kp LPAR &kp RPAR
                &kp QMARK &kp GRAVE &none    &none      &none           &kp MINUS &kp EQUAL &kp TILDE &kp LBKT &kp RBKT
                &none     &none     &none    &none      &none           &kp SEMI  &kp SLASH &kp BSLH  &kp LBRC &kp RBRC
                                             &none      &kp SPACE       &kp ENTER &none
            >;
        };
        accents_layer {
            // ------------------------------------------------------------------------
            // |     |  Å  |  €  |     |     |          |     |     |     |  Ö  |     |
            // |  Ä  |     |     |     |  £  |          |     |     |     |     |     |
            // |     |     |     |     |     |          |     |     |     |     |     |
            //                   |     |SPACE|          |ENTER| FUN |
            bindings = <
                &none     &kp RA(W) &kp RA(N5) &none &none           &none     &none   &none &kp RA(O) &none
                &kp RA(A) &none     &none      &none &kp RA(N4)      &none     &none   &none &none     &none
                &none     &none     &none      &none &none           &none     &none   &none &none     &none
                                               &none &kp SPACE       &kp ENTER &mo FUN
            >;
        };
        navigation_layer {
            // ------------------------------------------------------------------------
            // | Tab |     |     |     |     |          | PgUp| Home|  Up | End |     |
            // | Esc |LGUI |LAlt |LShft|LCtrl|          | PgDn| Left| Down|Right|     |  NOTE: Sticky modifiers (one-shot mods)
            // | Shft|     |RAlt |     |     |          |     | BkSp|     | Del |     |
            //                   |     |SPACE|          |ENTER|     |
            bindings = <
                &kp TAB   &none    &none    &none     &none            &kp PG_UP &kp HOME &kp UP   &kp END   &none
                &gresc    &sk LGUI &sk LALT &sk LSHFT &sk LCTRL        &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &none
                &kp LSHFT &none    &sk RALT &none     &none            &none     &kp BSPC &none    &kp DEL   &none
                                            &none     &kp SPACE        &kp ENTER &none
            >;
        };
        function_layer {
            // ------------------------------------------------------------------------
            // | F1  | F2  | F3  | F4  | F5  |          | F6  | F7  | F8  | F9  | F10 |
            // |     |PrntS|     |     |     |          |     |     |     |     | F11 |
            // |     |     |     |     |     |          |     |     |     |     | F12 |
            //                   |     |SPACE|          |ENTER|     |
            bindings = <
                &kp F1 &kp F2    &kp F3 &kp F4 &kp F5           &kp F6    &kp F7 &kp F8 &kp F9 &kp F10
                &none  &kp PSCRN &none  &none  &none            &none     &none  &none  &none  &kp F11
                &none  &none     &none  &none  &none            &none     &none  &none  &none  &kp F12
                                        &none  &kp SPACE        &kp ENTER &none
            >;
        };
        system_layer {
            // ------------------------------------------------------------------------
            // |BOOTL|     |     |BT_CL| BT0 |          | BT3 |     |     |     |BOOTL|
            // |     |     |EP_TG|     | BT1 |          | BT4 |     |     |     |     |
            // |RESET|     |     |     | BT2 |          | BT5 |     |     |     |RESET|
            //                   |     |SPACE|          |ENTER|     |
            bindings = <
                &bootloader &none &none             &bt BT_CLR &bt BT_SEL 0         &bt BT_SEL 3 &none &none &none &bootloader
                &none       &none &ext_power EP_TOG &none      &bt BT_SEL 1         &bt BT_SEL 4 &none &none &none &none
                &reset      &none &none             &none      &bt BT_SEL 2         &bt BT_SEL 5 &none &none &none &reset
                                                    &none      &kp SPACE            &kp ENTER    &none
            >;
        };
    };
};
