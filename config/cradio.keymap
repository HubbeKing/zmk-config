/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;      // Q + W
            bindings = <&kp ESC>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;    // A + S
            bindings = <&kp TAB>;
        };
        combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;    // K + J
            bindings = <&kp RALT>;
        };
        combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;    // S + D
            bindings = <&kp LALT>;
        };
        combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;    // D + F
            bindings = <&kp LGUI>;
        };
        combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;    // K + L
            bindings = <&kp RGUI>;
        };
    };
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            // Q   W   E   R   T          Y   U   I   O   P
            // A   S   D   F   G          H   J   K   L   '
            // Z   X   C   V   B          N   M   ,   .   ↵
            //             L1  LCtrl      SPC L2
            bindings = <
                &kp Q       &kp W &kp E &kp R &kp T 					&kp Y   &kp U  &kp I    &kp O   &kp P 
                &kp A       &kp S &kp D &kp F &kp G 			        &kp H   &kp J  &kp K    &kp L   &kp QUOT
                &mt LSFT Z  &kp X &kp C &kp V &kp B				        &kp N   &kp M  &kp CMMA &kp DOT &mt LSFT RET
                                        &mo 1 &kp LCTL  				&kp SPC &mo 2 
            >;
        };
        left_layer {
            // 1   2   3   4   5          6   7   8   9   0
            // Tab CtS "   |   #          -   =   [   ]   DEL
            // Esc ~   \   #   ~          -   `   [   ]   DEL
            //             L1  LG         RG  L2
            bindings = <
                &kp NUM_1  &kp NUM_2 &kp NUM_3       &kp NUM_4       &kp NUM_5		        &kp NUM_6 &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp NUM_0 
                &kp TAB    &kp LC(S) &kp DQT         &kp PIPE2       &kp HASH 		        &kp MINUS &kp EQL   &kp LBKT  &kp RBKT  &kp DEL 
                &kp ESC    &kp TILDE &kp NON_US_BSLH &kp NON_US_HASH &kp TILDE2 	        &kp MINUS &kp GRAVE &kp LBKT  &kp RBKT  &kp DEL 
                                                     &mo 1           &kp LGUI  				&kp RGUI  &mo 2 
            >;
        };
        right_layer {
            // !   @   #   $   %          ^   &   *   (   )
            // #   ?   /   :   ;          -   =   [   ]   ←
            // LSh +   [   ]   \          _   L   D   U   R
            //             L3  LCtrl      SPC L2
            bindings = <
                &kp BANG  &kp ATSN   &kp HASH  &kp DLLR  &kp PRCT    			&kp CRRT  &kp AMPS      &kp STAR &kp LPRN &kp RPRN 
                &kp HASH  &kp QMARK  &kp FSLH  &kp COLN  &kp SCLN 			    &kp MINUS &kp EQL       &kp LBRC &kp RBRC &kp BKSP
                &kp LSFT  &kp PLUS   &kp LBKT  &kp RBKT  &kp BSLH    			&kp UNDER &kp LEFT      &kp DOWN &kp UP   &kp RIGHT
                                               &mo 3     &kp LCTL  				&kp SPC   &mo 2 
            >;
        };
        tri_layer {
            // 1   2   3   4   5          TR  TR  TR  TR  TR
            // F1  F2  F3  F4  F5         TR  PGU V+  Vx  TR
            // BTx BT+ BT- F6  F7         TR  PGD V-  TR  TR
            //             TR  TR         TR  TR
            bindings = <
                &kp NUM_1  &kp NUM_2  &kp NUM_3  &kp NUM_4 &kp NUM_5 			&trans &trans     &trans       &trans     &trans
                &kp F1     &kp F2     &kp F3     &kp F4    &kp F5  				&trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans 
                &bt BT_CLR &bt BT_NXT &bt BT_PRV &kp F6    &kp F7   			&trans &kp PG_DN  &kp K_VOL_DN &trans     &trans   
                                                 &trans    &trans  				&trans &trans 
            >;
        };
	};
};
