/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV  1
#define NUM  2
#define SYM  3
#define FUN  4
#define SYS  5

/ {
    behaviors {
        // Miryoku shift macros:
        // shift + BT_X -> &bt BT_SEL X &bt BT_CLR
        bt_sel_0: bt_sel_clr_0 {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_SEL_OR_CLEAR_0";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0>, <&macro_bt_clr_0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        bt_sel_1: bt_sel_clr_1 {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_SEL_OR_CLEAR_1";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1>, <&macro_bt_clr_1>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        bt_sel_2: bt_sel_clr_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_SEL_OR_CLEAR_2";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2>, <&macro_bt_clr_2>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        bt_sel_3: bt_sel_clr_3 {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_SEL_OR_CLEAR_3";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 3>, <&macro_bt_clr_3>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        // Homerow modifiers
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        // G A S C      C S A G
        //   A              A
    };
    combos {
        compatible = "zmk,combos";
        combo_lt_base {
            // Left thumb: BASE, &lt SYS Esc
            timeout-ms = <50>;
            key-positions = <30 31>;
            layers = <BASE>;
            bindings = <&lt SYS ESC>;
        };
        combo_lt_num {
            // Left thumb: NUM - .
            timeout-ms = <50>;
            key-positions = <30 31>;
            layers = <NUM>;
            bindings = <&kp DOT>;
        };
        combo_lt_sym {
            // Left thumb: SYM - (
            timeout-ms = <50>;
            key-positions = <30 31>;
            layers = <NUM>;
            bindings = <&kp LEFT_PARENTHESIS>;
        };
        combo_lt_fun {
            // Left thumb: FUN - "application"
            timeout-ms = <50>;
            key-positions = <30 31>;
            layers = <FUN>;
            bindings = <&kp K_APPLICATION>;
        };
        combo_rt_base {
            // Right thumb: BASE, &lt FUN Del
            timeout-ms = <50>;
            key-positions = <32 33>;
            layers = <BASE>;
            bindings = <&lt FUN DELETE>;
        };
        combo_rt_nav {
            // Right thumb: NAV - Delete
            timeout-ms = <50>;
            key-positions = <32 33>;
            layers = <NAV>;
            bindings = <&kp DELETE>;
        };
    };
    macros {
        // Miryoku shift macros:
        // shift + BT_X -> &bt BT_SEL X &bt BT_CLR
        macro_bt_clr_0: macro_bt_clr_0 {
            label = "ma_bt_clear_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0>, <&bt BT_CLR>;
        }
        macro_bt_clr_1: macro_bt_clr_2 {
            label = "ma_bt_clear_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1>, <&bt BT_CLR>;
        }
        macro_bt_clr_2: macro_bt_clr_2 {
            label = "ma_bt_clear_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2>, <&bt BT_CLR>;
        }
        macro_bt_clr_3: macro_bt_clr_3 {
            label = "ma_bt_clear_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 3>, <&bt BT_CLR>;
        }
    };
    keymap {
        compatible = "zmk,keymap";
        miryoku_base {
            // ------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |          |  Y  |  U  |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |          |  H  |  J  |  K  |  L  |  '  |
            // |  Z  |  X  |  C  |  V  |  B  |          |  N  |  M  |  ,  |  .  |  /  |
            //                   |SPACE| Tab |          |ENTER|BkSpc|
            //                    (NAV)                  (SYM) (NUM)
            //                        Esc                    Del
            //                       (SYS)                  (FUN)
            bindings = <
                &kp Q      &kp W      &kp E       &kp R         &kp T                 &kp Y         &kp U       &kp I       &kp O        &kp P
                &hm LGUI A &hm LALT S &hm LSHFT D &hm LCTRL F   &kp G                 &kp H         &hm RCTRL J &hm RSHFT K &hm LALT L   &hm RGUI QUOT
                &kp Z      &hm RALT X &kp C       &kp V         &kp B                 &kp N         &kp M       &kp COMMA   &hm RALT DOT &kp FSLH
                                                  &lt NAV SPACE &kp TAB               &lt SYM ENTER &lt NUM BACKSPACE
            >;
        };
        miryoku_nav {
            // ------------------------------------------------------------------------
            // |     |     |     |     |     |          | Ins |Home |  Up | End |PgUp |
            // |LGUI |LAlt |LShft|LCtrl|     |          |CapsL|Left |Down |Right|PgDn |
            // |     |RAlt |     |     |     |          |Redo |Paste|Copy | Cut |Undo |
            //                   |     |     |          |ENTER|BkSpc|
            bindings = <
                &none    &none    &none     &none     &none             &kp INSERT   &kp HOME    &kp UP     &kp END   &kp PAGE_UP
                &kp LGUI &kp LALT &kp LSHFT &kp LCTRL &none             &kp CAPSLOCK &kp LEFT    &kp DOWN   &kp RIGHT &kp PAGE_DOWN
                &none    &kp RALT &none     &none     &none             &kp K_REDO   &kp K_PASTE &kp K_COPY &kp K_CUT &kp K_UNDO
                                            &none     &none             &kp ENTER    &kp BACKSPACE
            >;
        };
        miryoku_num {
            // ------------------------------------------------------------------------
            // |  [  |  7  |  8  |  9  |  ]  |          |     |     |     |     |     |
            // |  ;  |  4  |  5  |  6  |  =  |          |     |RCtrl|RShft|LAlt |RGUI |
            // |  `  |  1  |  2  |  3  |  \  |          |     |     |     |RAlt |     |
            //                   |  0  |  -  |          |     |     |
            bindings = <
                &kp LBKT  &kp N7 &kp N8 &kp N9 &kp RBKT             &none &none     &none     &none    &none
                &kp SEMI  &kp N4 &kp N5 &kp N6 &kp EQUAL            &none &kp RCTRL &kp RSHFT &kp LALT &kp RGUI
                &kp GRAVE &kp N1 &kp N2 &kp N3 &kp BSLH             &none &none     &none     &kp RALT &none
                                        &kp N0 &kp MINUS            &none &none
            >;
        };
        miryoku_sym {
            // ------------------------------------------------------------------------
            // |  {  |  &  |  *  |  (  |  }  |          |     |     |     |     |     |
            // |  :  |  $  |  %  |  ^  |  +  |          |     |RCtrl|RShft|LAlt |RGUI |
            // |  ~  |  !  |  @  |  #  |  |  |          |     |     |     |RAlt |     |
            //                   |  )  |  _  |          |     |     |
            bindings = <
                &kp LBRC  &kp AMPS   &kp STAR    &kp LPAR  &kp RBRC             &none &none     &none     &none    &none
                &kp COLON &kp DOLLAR &kp PERCENT &kp CARET &kp PLUS             &none &kp RCTRL &kp RSHFT &kp LALT &kp RGUI
                &kp TILDE &kp EXCL   &kp AT_SIGN &kp HASH  &kp PIPE             &none &none     &none     &kp RALT &none
                                                 &kp RPAR  &kp UNDERSCORE       &none &none
            >;
        };
        miryoku_fun {
            // ------------------------------------------------------------------------
            // | F12 | F7  | F8  | F9  |PrnSc|          |     |     |     |     |     |
            // | F11 | F4  | F5  | F6  |ScrLK|          |     |RCtrl|RShft|LAlt |RGUI |
            // | F10 | F1  | F2  | F3  |Pause|          |     |     |     |RAlt |     |
            //                   |SPACE| Tab |          |     |     |
            bindings = <
                &kp F12 &kp F7 &kp F8 &kp F9    &kp PRINTSCREEN             &none &none     &none     &none    &none
                &kp F11 &kp F4 &kp F5 &kp F6    &kp SCROLLLOCK              &none &kp RCTRL &kp RSHFT &kp LALT &kp RGUI
                &kp F10 &kp F1 &kp F2 &kp F3    &kp PAUSE_BREAK             &none &none     &none     &kp RALT &none
                                      &kp SPACE &kp TAB                     &none &none
            >;
        };
        miryoku_sys {
            // ------------------------------------------------------------------------
            // |RESET|     |     |     |BOOTL|          |BOOTL|     |     |     |RESET|
            // |LGUI |LAlt |LShft|LCtrl|     |          |OUT_U|     |     |     |     |
            // |     |RAlt |     |     |     |          |OUT_B|BT_0 |BT_1 |BT_2 |BT_3 |
            //                   |     |     |          |     |     |
            bindings = <
                &reset   &none    &none     &none     &bootloader               &bootloader  &none     &none     &none     &reset
                &kp LGUI &kp LALT &kp LSHFT &kp LCTRL &none                     &out OUT_USB &none     &none     &none     &none
                &none    &kp RALT &none     &none     &none                     &out OUT_BLE &bt_sel_0 &bt_sel_1 &bt_sel_2 &bt_sel_3
                                            &none     &none                     &none        &none
            >;
        };
    };
};
